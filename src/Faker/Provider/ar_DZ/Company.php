<?php

namespace Faker\Provider\ar_DZ;

use Faker\Calculator\Luhn;

class Company extends \Faker\Provider\Company
{
    protected static $formats = array(
        '{{lastName}} {{companySuffix}}',
        '{{companyPrefix}} {{lastName}} {{companySuffix}}',
        '{{companyPrefix}} {{lastName}}',
    );

    protected static $jobTitleFormat = array(
        'متصرف اداري', 'محاسب', 'ممثل', 'خبير تأمينات', 'Adjustment Clerk',
        'مدير', 'خبير شؤون إدارية', 'مسير إداري',
        'مشرف إداري', 'مسير إشهاري', 'عون مبيعات', 'مهندس طيران',
        'خبير فلاحي', 'مهندس فلاحي', 'مشغل آلات فلاحية', 'فلاح', 'تقني فلاحة',
        'عضو فرقة طيران', 'ضابط طيار', 'مراقب حركة المرور الجوية',
        'مصلح هياكل طائرات', 'ميكانيكي طائرات',
        'طيار', 'مطور خوارزميات', 'مساعد طيار', 'سائق سيارة إسعاف',
        'مسعف حيوانات', 'عالم حيوانات', 'حيوانات مدرب', 'معلن',
        'عالم انثروبولوجيا', 'مدرس انثروبولوجيا',
        'مصلح اجهزة الكترونية', 'مهندس', 'أستاذ هندسة', 'مكلف بالارشيفات', 'مدير فني',
        'استاذ فنون', 'ضابط عتاد', 'فنان', 'رياضي', 'مدرب رياضي', 'تقني سمعي بصري',
        'مهندس صوت', 'مصلح هياكل سيارات', 'مختص بزجاج السيارات', 'ميكانيكي', 'تقني سيارات',
        'متعامل أدوات مساعدة', 'مراقب طيران', 'خباز', 'حلاق', 'عامل مقهى', 'مصلح بطاريات',
        'ميكانيكي دراجات', 'عون ضرائب', 'بيوكيميائي', 'مدرس علوم بيولوجية', 'عالم بيولوجيا',
        'مهندس بيوطبي', 'صانع قوارب بحرية', 'عون مكتبات', 'محلل إخباري', 'تقني بث', 'محلل ميزانية',
        'مختص بطلاء السيارات', 'عامل بناء', 'مراقب بناء',
        'سائق آلات اشغال عمومية', 'سائق حافلة', 'مدير تطوير الأعمال', 'مدير أعمال',
        'مختص أعمال', 'مدرس أعمال', 'جزار', 'مشتري', 'طباخ',
        'مشغل كاميرا', 'مصلح كاميرات', 'كابتن', 'كاتب إبداعي', 'مستشار مهني', 'نجار',
        'مختص خرائط', 'رسام كارتون', 'أمين صندوق', 'ضابط مركزي', 'مدير تنفيذي', 'مدير مالي',
        'شيف طبخ', 'مهندس كيمياء', 'متحكم معدات كيميائية', 'متعامل معدات كيميائية',
        'كيميائي', 'مدرس كيمياء', 'مربية أطفال', 'مهندس مدني', 'منظف سيارات',
        'مختص نفسي', 'مدرب كشاف', 'مصمم صناعي  و تجاري',
        'سائق تجاري', 'طيار تجاري', 'مصلح معدات الاتصال', 'مشغل معدات الاتصال',
        'أستاذ تواصل', 'مدير خدمات اجتماعية', 'مهندس عتاد الحواسيب', 'مبرمج حاسوب',
        'مصلح حواسيب', 'مدرس علوم الحاسوب', 'عالم الحواسيب',
        'مختص في أمن المعلومات', 'مهندس برمجيات', 'مختص حواسيب', 'محلل أنظمة حواسيب', 'محامي',
        'اختصاصي تبريد و تدفئة', 'فنان حرفي', 'عون إدخال بيانات',
        'مدير قواعد بيانانت', 'مدير أنظمة', 'طبيب اسنان', 'مساعد طبيب أسنان', 'طبيب', 'مصمم', 'ناشر', 'محقق', 'اختصاصي أشعة',
        'مدير تسويق', 'غسال صحون', 'موزع', 'مدير توزيع', 'مدرس اقتصاد', 'اقتصادي', 'محرر', 'مدير التعليم',
        'معلم', 'مدرس', 'استاذ', 'مصلح معدات كهربائية', 'كهربائي', 'مهندس كهرباء معمارية', 'تقني كهرباء', 'مدرس لغات اجنبية',
        'نحات', 'مؤدي عروض ترفيهية', 'خبير أمراض معدية', 'منظم مناسبات', 'سكرتير تنفيذي',
        'خبير متفجرات', 'مزارع', 'مصمم أزياء', 'عارض أزياء', 'محلل مالي', 'مدير مالي', 'خبير مالي',
        'عون حماية مدنية', 'محقق حرائق', 'مهندس منع حرائق', 'بواب', 'عون أمن', 'مجوهراتي', 'قاضي', 'مدرس حضانة', 'مهندس مسح أراضي',
    );

    protected static $bsWords = array(
        array(),
    );

    protected static $catchPhraseWords = array(
        array('الخدمات', 'الحلول', 'الانظمة'),
        array(
            'الذكية', 'المتطورة', 'المتقدمة', 'الدولية', 'المتخصصة', 'السريعة',
            'الابداعية', 'المتكاملة', 'المتغيرة', 'المثالية',
        ),
    );

    protected static $companyPrefix = array('شركة', 'مؤسسة', 'مجموعة', 'مكتب', 'أكاديمية', 'ش.ذ.م.م');

    protected static $companySuffix = array(
        'مؤسسة عمومية', 'شركة تضامن', 'شركة ذات مسؤولية محدودة', 'مؤسسة خاصة',
    );

    /**
     * @example 'مؤسسة'
     * @return string
     */
    public function companyPrefix()
    {
        return static::randomElement(self::$companyPrefix);
    }

    /**
     * @example 'الحلول المتقدمة'
     */
    public function catchPhrase()
    {
        $result = array();
        foreach (static::$catchPhraseWords as &$word) {
            $result[] = static::randomElement($word);
        }

        return join(' ', $result);
    }

    /**
     * @example 'integrate extensible convergence'
     */
    public function bs()
    {
        $result = array();
        foreach (static::$bsWords as &$word) {
            $result[] = static::randomElement($word);
        }

        return join(' ', $result);
    }

    /**
     * example 7001010101
     **/
    public static function companyIdNumber()
    {
        $partialValue = static::numerify(700 . str_repeat('#', 6));
        return Luhn::generateLuhnNumber($partialValue);
    }
}
